{"version":3,"sources":["components/MessageFrom.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setvalue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setusername","password","setpassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96f1caab.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { sendMessage,isTyping } from \"react-chat-engine\";\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\r\n\r\n\r\nconst MessageForm = ( props ) => {\r\n    const [ value, setvalue ] = useState('')\r\n    const { chatId, creds } = props\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        const text = value.trim()\r\n\r\n        if(text.length > 0) sendMessage(creds, chatId, { text })\r\n\r\n        setvalue('')\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setvalue(event.target.value)\r\n\r\n        isTyping(props,chatId)\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: \"\" })\r\n    }\r\n\r\n    return(\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input \r\n                className=\"message-input\"\r\n                placeholder=\"send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\"/>\r\n\r\n                </span>\r\n            </label>\r\n\r\n            <input \r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{display : 'none'}}\r\n                onChange={handleUpload}\r\n            />\r\n\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n\r\n            </button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm","const MyMessage = ( { message } ) => {\r\n\r\n    if(message?.attachments?.length > 0) {\r\n        return(\r\n            <img \r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float : 'right' }}\r\n            />\r\n        )\r\n    }\r\n    return(\r\n        <div className=\"message\" style={{ float : 'right', marginRight : '18px', color : 'white', backgroundColor : '#3B2A50'   }}>\r\n            {message.text}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MyMessage","const TheirMessage = ( {lastMessage, message} ) => {\r\n\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username\r\n    \r\n    return(\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div \r\n                    className=\"message-avatar\"\r\n                    style={{backgroundImage : `url(${message?.sender?.avatar})`}}\r\n                />\r\n        )}\r\n        {message?.attachments?.length > 0 \r\n            ? (\r\n                <img \r\n                    src={message.attachments[0].file}\r\n                    alt=\"message-attachment\"\r\n                    className=\"message-image\"\r\n                    style={{ marginLeft: isFirstMessageByUser ? '4px': '48px'  }}\r\n                />\r\n                )\r\n            : (\r\n                <div className=\"message\" style={{ float : 'left ', backgroundColor : '#CABCDC',  marginLeft: isFirstMessageByUser ? '4px': '48px' }}>\r\n                    {message.text}\r\n                </div>\r\n            )           \r\n        }    \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TheirMessage","import MessageForm from './MessageFrom';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\nconst ChatFeed = (props) => {\r\n\r\n    const { chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat]\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div \r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float : isMyMessage ? 'right' : 'left',\r\n                    backgroundImage : `url(${person?.person?.avatar})`\r\n                }}\r\n            />\r\n        ))\r\n    }\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages)\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key]\r\n            const lastMessageKey = index === 0 ? null :keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{ width : '100%'}}>\r\n                    <div className=\"message-block\">\r\n                        { isMyMessage \r\n                        ? <MyMessage message = {message}/>\r\n                        : <TheirMessage message = {message} lastMessage = {messages[lastMessageKey]} /> }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{ marginRight : isMyMessage ? '18px' : '0px', marginLeft : isMyMessage ? '0px' : '68px'  }}>\r\n                       {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        })\r\n    }\r\n\r\n    if(!chat) return 'Loading ...'\r\n\r\n    return(\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat.title}</div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => ` ${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{ height:'100px' }}></div>\r\n            <div className=\"message-form-container\">\r\n                <MessageForm  {...props}  chatId ={activeChat} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed;","import { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst LoginForm = () => {\r\n    const [username, setusername] = useState('')\r\n    const [password, setpassword] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const authObject = { 'Project-ID' : \"dd3f0a8e-df89-469d-88b7-b7dc766763e9\", 'User-Name' : username, 'User-Secret' : password  }\r\n\r\n\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', { headers: authObject })\r\n\r\n            localStorage.setItem('username', username)\r\n            localStorage.setItem('password', password)\r\n\r\n            setError('')\r\n\r\n            window.location.reload()\r\n        } catch (err) {\r\n            setError('Oops, incorrect Credentials')\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e) => setusername(e.target.value)}  className=\"input\" placeholder=\"Username\" required />\r\n                    <input type=\"password\" value={password} onChange={(e) => setpassword(e.target.value)}  className=\"input\" placeholder=\"Password\" required />\r\n\r\n                    <div align=\"center\">\r\n                        <button type =\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n\r\n                    </div>\r\n                    <h2 className=\"error\"> {error}</h2>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import { ChatEngine } from \"react-chat-engine\";\r\n\r\nimport './App.css';\r\n\r\nimport ChatFeed from './components/ChatFeed'\r\nimport LoginForm from \"./components/LoginForm\";\r\n\r\nconst App = () => {\r\n\r\n    if(!localStorage.getItem('username')) return <LoginForm />\r\n\r\n    return(\r\n        <ChatEngine\r\n            height=\"100vh\"\r\n            projectID=\"dd3f0a8e-df89-469d-88b7-b7dc766763e9\"\r\n            userName={localStorage.getItem('username')}\r\n            userSecret={localStorage.getItem('password')}\r\n            renderChatFeed={(chatAppProps) => <ChatFeed { ...chatAppProps}/> }\r\n        />\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}